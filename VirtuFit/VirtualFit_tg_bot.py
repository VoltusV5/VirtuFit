from aiogram import Bot, Dispatcher, F
import asyncio
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state,State,StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message, BotCommand, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, FSInputFile, InputFile
from dotenv import load_dotenv 
from sqlalchemy.orm import Session
from control_size import control
from buttons import kb_builder1, kb_builder_menu, kb_builder_payments, kb_builder
import time
from database import *
import os

         
        
Base.metadata.create_all(bind=engine)

def get_db():
    db:Session = SessionLocal()
    return db

storage = MemoryStorage()



load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(storage=storage)


class FSMform(StatesGroup):
    gender = State() #–ü–æ–ª
    chest = State() #–û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏
    waist = State() #–¢–∞–ª–∏—è
    hips = State() #–ë—ë–¥—Ä–∞
    shoulder_width = State() #—à–∏—Ä–∏–Ω–∞ –ø–ª–µ—á—å
    height = State() #–†–æ—Å—Ç
    chest_girl = State() # –†–∞–∑–º–µ—Ä –≥—Ä—É–¥–∏
    neck = State() #–®–µ—è
    massa = State()
    len_arm = State() #–î–ª–∏–Ω–Ω–∞ —Ä—É–∫


async def set_main_menu(bot:Bot):
    menu_commands = [
        BotCommand(command='/menu', description="–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é"),
        BotCommand(command='/help', description='–°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞'),
        BotCommand(command='/cancel', description="–û—Ç–º–µ–Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤")             
        ]
    await bot.set_my_commands(menu_commands)

dp.startup.register(set_main_menu)



@dp.message(Command(commands="start"), StateFilter(default_state))
async def start_command(message: Message):
    db = get_db()
    person = Person(id=message.from_user.id, photo=False)
    db.add(person)
    db.commit()
    db.refresh(person)

    db.close()

    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç VirtualFit.\n") #–°—é–¥–∞ –Ω–∞–¥–æ –ø—Ä–∏–¥—É–º–∞—Ç—å —á—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å, —ç—Ç–æ –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –∑–∞—Ö–æ–¥–∏—Ç
    

@dp.message(Command(commands="help"), StateFilter(default_state))
async def start_command(message: Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –æ–¥–µ–∂–¥—ã,"
    " –∞ —è —Å–¥–µ–ª–∞—é —Ç–µ–±–µ –∫–æ—Ä–æ—Ç–∫–∏–π —Ä–æ–ª–∏–∫ —Å 3–¥ –º–æ–¥–µ–ª—å–∫–æ–π –æ–¥–µ—Ç–æ–π –≤ –æ–¥–µ–∂–¥—É —Å —Ñ–æ—Ç–æ!:)") 

@dp.message(Command(commands="cancel"), StateFilter(default_state))
async def cancel_default(message: Message):
    await message.answer("–û—Ç–º–µ–Ω—è—Ç—å –Ω–µ—á–µ–≥–æ.")


@dp.message(Command(commands='menu'), StateFilter(default_state))
async def start_command(message: Message):
    await message.answer("–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?)", reply_markup=kb_builder_menu.as_markup(resize_keyboard=True))
    

@dp.message(Command(commands="cancel"), ~StateFilter(default_state))
async def cancel_form(message: Message, state: FSMContext):
    await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤")
    await state.clear()

@dp.message(F.text == 'üìè–í–≤–µ—Å—Ç–∏ —Ä–∞–∑–º–µ—Ä—ãüìè', StateFilter(default_state))
async def start_form(message: Message, state: FSMContext):
    male_button = InlineKeyboardButton(
        text='–ú—É–∂—Å–∫–æ–π ‚ôÇ',
        callback_data='male'
    )
    female_button = InlineKeyboardButton(
        text='–ñ–µ–Ω—Å–∫–∏–π ‚ôÄ',
        callback_data='female'
    )
    keyboard = [[male_button, female_button]]

    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    await message.answer(
        text="üëã –ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –ö–∞–∫–æ–π —É —Ç–µ–±—è –ø–æ–ª?\n\n"
"‚û§ –ù–∞–∂–º–∏ ¬´–ú—É–∂—Å–∫–æ–π¬ª –∏–ª–∏ ¬´–ñ–µ–Ω—Å–∫–∏–π¬ª.\n\n"
"‚ú® –ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è, —è –Ω–µ —Ä–∞—Å—Å–∫–∞–∂—É! –ê –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ ‚Äî /cancel.\n", 
        reply_markup=markup)
    await state.set_state(FSMform.gender)

@dp.callback_query(StateFilter(FSMform.gender), F.data.in_(['male', 'female']))
async def gender_done(callback: CallbackQuery, state: FSMContext):
    await state.update_data(gender=callback.data)

    await callback.message.delete()
    await callback.message.answer("üìè –¢–≤–æ–π —Ä–æ—Å—Ç –≤ —Å–º? –ù–µ –ø—Ä–∏—É–º–µ–Ω—å—à–∞–π, —è –≤–µ—Ä—é –≤ —Ç–µ–±—è!\n\n"
"‚û§ –ü—Ä–∏–º–µ—Ä: *175*.\n\n"
"‚ö†Ô∏è –ï—Å–ª–∏ –∑–∞–ø—É—Ç–∞–ª—Å—è ‚Äî –∫–æ–º–∞–Ω–¥–∞ /cancel !")
    await state.set_state(FSMform.height)

@dp.message(StateFilter(FSMform.gender))
async def gender_error(message: Message):
    await message.answer("üòÖ –û–π, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª! –î–∞–≤–∞–π –µ—â–µ —Ä–∞–∑–æ–∫: ¬´–ú—É–∂—Å–∫–æ–π¬ª –∏–ª–∏ ¬´–ñ–µ–Ω—Å–∫–∏–π¬ª?\n\n"
"‚û§ P.S. –í—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ —Å–±–µ–∂–∞—Ç—å —á–µ—Ä–µ–∑ /cancel!")

@dp.message(StateFilter(FSMform.height), control)
async def height_done(ms:Message, state: FSMContext):
    await state.update_data(height=int(ms.text))
    photo = FSInputFile(r"photo\–æ–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏.png")
    await bot.send_photo(ms.from_user.id, photo=photo, caption="–û—Ç–ª–∏—á–Ω–æ!\nüì¶ –¢–µ–ø–µ—Ä—å –∏–∑–º–µ—Ä—å –≥—Ä—É–¥—å (–ø–æ —Å–∞–º–æ–π —à–∏—Ä–æ–∫–æ–π —á–∞—Å—Ç–∏ –≤ –æ–±—Ö–≤–∞—Ç–µ)!\n\n"
                    "‚û§ –ù–∞–ø–∏—à–∏ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 98. –≠—Ç–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –º–µ–∂–¥—É –Ω–∞–º–∏ ü§´\n\n"
                    "‚ö†Ô∏è –ó–∞—Å—Ç—Ä—è–ª? –°–º–µ–ª–æ –ø–∏—à–∏ /cancel!")
    await state.set_state(FSMform.chest)

@dp.message(StateFilter(FSMform.height))
async def height_error(ms:Message):
     await ms.answer("‚ùå –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!\n\n"
"‚û§ –ü—Ä–∏–º–µ—Ä: 85. –ò –ø–æ–º–Ω–∏: /cancel ‚Äî —Ç–≤–æ–π —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –∫—Ä—É–≥!")
    
#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ–±—Ö–≤–∞—Ç–∞ –≥—Ä—É–¥–∏(–ü—Ä–æ–¥—É–º–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±—ã).
@dp.message(StateFilter(FSMform.chest), control)
async def chest_done(message:Message, state: FSMContext):
    await state.update_data(chest=int(message.text))
    photo = FSInputFile(r"photo\—Ç–∞–ª–∏—è.png")
    await bot.send_photo(chat_id=message.from_user.id, photo=photo, caption="üéÄ –ê —Ç–µ–ø–µ—Ä—å —Ç–∞–ª–∏—è! –í–≤–µ–¥–∏ —Ä–∞–∑–º–µ—Ä –≤ –æ–±—Ö–≤–∞—Ç–µ –≤ —Å–º (—Ç–æ–ª—å–∫–æ —á–µ—Å—Ç–Ω–æ!)\n\n"
                         "‚û§ –ü—Ä–∏–º–µ—Ä: 72. –Ø –Ω–µ —Å—É–∂—É, —è –ø–æ–º–æ–≥–∞—é üòâ\n\n"
                         "‚ö†Ô∏è –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ‚Äî /cancel —Å–ø–∞—Å–µ—Ç!")
    await state.set_state(FSMform.waist)

@dp.message(StateFilter(FSMform.chest))
async def chest_error(ms: Message):
    await ms.answer("‚ùå –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!\n\n"
"‚û§ –ü—Ä–∏–º–µ—Ä: 85. –ò –ø–æ–º–Ω–∏: /cancel ‚Äî —Ç–≤–æ–π —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –∫—Ä—É–≥!")
    
@dp.message(StateFilter(FSMform.waist), control)
async def waist_done(ms: Message, state: FSMContext):
    await state.update_data(waist=int(ms.text))
    photo = FSInputFile(r"photo\–ë—ë–¥—Ä–∞.png")
    await bot.send_photo(chat_id=ms.from_user.id, photo=photo, caption="üçë –í—Ä–µ–º—è –¥–ª—è —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö! –û–±—Ö–≤–∞—Ç *–æ–¥–Ω–æ–≥–æ* –±–µ–¥—Ä–∞ –≤ —Å–º?\n\n"
                    "‚û§ –ù–∞–ø—Ä–∏–º–µ—Ä: 65. –ù–∏–∫—Ç–æ –Ω–µ —É–≤–∏–¥–∏—Ç, –∫—Ä–æ–º–µ –º–µ–Ω—è!\n\n"
                    "‚ö†Ô∏è –•–æ—á–µ—à—å –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å? –ñ–º–∏ /cancel!")
    await state.set_state(FSMform.hips)


@dp.message(StateFilter(FSMform.waist))
async def waist_error(ms: Message):
    await ms.answer("‚ùå –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!\n\n"
"‚û§ –ü—Ä–∏–º–µ—Ä: 85. –ò –ø–æ–º–Ω–∏: /cancel ‚Äî —Ç–≤–æ–π —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –∫—Ä—É–≥!")
    
@dp.message(StateFilter(FSMform.hips),control)
async def hips_done(ms: Message, state: FSMContext):
    await state.update_data(hips=int(ms.text))
    photo = FSInputFile(r"photo\—à–∏—Ä–∏–Ω–∞ –ø–ª–µ—á.png")
    await bot.send_photo(chat_id=ms.from_user.id, photo=photo, caption="üèãÔ∏è –¢–µ–ø–µ—Ä—å –ø–ª–µ—á–∏! –ò–∑–º–µ—Ä—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–æ—Å—Ç–æ—á–∫–∞–º–∏ (–≤ —Å–º).\n\n"
                    "‚û§ –°–æ–≤–µ—Ç: –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä—É–±–∞—à–∫—É –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏ üëï\n\n"
                    "‚ö†Ô∏è –£—Å—Ç–∞–ª? /cancel ‚Äî –∏ –º—ã –ø—Ä–µ—Ä–≤—ë–º—Å—è")
    await state.set_state(FSMform.shoulder_width)

@dp.message(StateFilter(FSMform.hips))
async def hips_error(ms: Message):
    await ms.answer("‚ùå –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!\n\n"
"‚û§ –ü—Ä–∏–º–µ—Ä: 85. –ò –ø–æ–º–Ω–∏: /cancel ‚Äî —Ç–≤–æ–π —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –∫—Ä—É–≥!")

@dp.message(StateFilter(FSMform.shoulder_width), control)
async def sw_done(ms: Message, state: FSMContext):
    await state.update_data(shoulder_width=int(ms.text))
    photo = FSInputFile(r"photo\–¥–ª–∏–Ω–∞ —Ä—É–∫.png")   
    await bot.send_photo(chat_id=ms.from_user.id, photo=photo, caption="üß£ –î–ª–∏–Ω–Ω–∞ —Ä—É–∫! –î–∞-–¥–∞, —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –∏–¥–µ–∞–ª—å–Ω–æ–π —Ä—É–±–∞—à–∫–∏!\n\n"
                    "‚û§ –ü—Ä–∏–º–µ—Ä: 38.\n\n"
                    "‚ö†Ô∏è –ï—Å–ª–∏ –Ω–∞–¥–æ–µ–ª–æ ‚Äî /cancel –≤—Å–µ–≥–¥–∞ –ø–æ–º–æ–∂–µ—Ç!")
    await state.set_state(FSMform.len_arm)

@dp.message(StateFilter(FSMform.shoulder_width))
async def sw_error(ms: Message):
    await ms.answer("‚ùå –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!\n\n"
"‚û§ –ü—Ä–∏–º–µ—Ä: 85. –ò –ø–æ–º–Ω–∏: /cancel ‚Äî —Ç–≤–æ–π —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –∫—Ä—É–≥!")
    


@dp.message(StateFilter(FSMform.len_arm), control)
async def len_arm_done(ms:Message, state: FSMContext):
    await state.update_data(len_arm=float(ms.text))
    
    db = get_db()
    data = await state.get_data()
    photo = FSInputFile(r"photo\–ø–æ–±–µ–¥–∞.jpg")
    await bot.send_photo(chat_id=ms.from_user.id, photo=photo, caption="–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å 3–¥ –º–æ–¥–µ–ª—å!!!!\n\n"
    "–°–≤–æ–∏ —Ä–∞–∑–º–µ—Ä—ã –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É:\n<–ú–æ–∏ —Ä–∞–∑–º–µ—Ä—ã>")
    person = db.query(Person).filter(Person.id==ms.from_user.id).first()
    person.gender = data.get('gender')
    person.chest = data.get('chest')
    person.waist = data.get('waist')
    person.hips = data.get('hips')
    person.shoulder_width = data.get('shoulder_width')
    person.height = data.get('height')
    person.len_arm = data.get('len_arm')
    db.commit()
    db.close()
    await state.clear()

  
@dp.message(StateFilter(FSMform.len_arm))
async def massa_error(ms:Message):
    await ms.answer("‚ùå –ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!\n"
"‚û§ –ü—Ä–∏–º–µ—Ä: 85. –ò –ø–æ–º–Ω–∏: /cancel ‚Äî —Ç–≤–æ–π —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –∫—Ä—É–≥!")
    


@dp.message(F.text=="üìù–ú–æ–∏ —Ä–∞–∑–º–µ—Ä—ãüìù", StateFilter(default_state))
async def size_person(ms:Message):
    db = get_db()
    person = db.get(Person, ms.from_user.id)
    if person.gender == 'female':
        photo = FSInputFile(r"photo\—Ä–∞–∑–º–µ—Ä—ã.jpg")
        await bot.send_photo(chat_id=ms.from_user.id, photo=photo, 
        caption=f'–ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π\n'
            f'–û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏: {person.chest} —Å–º\n'
            f'–¢–∞–ª–∏—è: {person.waist} —Å–º\n'
            f'–ë—ë–¥—Ä–∞: {person.hips} —Å–º\n'
            f'–®–∏—Ä–∏–Ω–∞ –ø–ª–µ—á—å: {person.shoulder_width} —Å–º\n'
            f'–†–æ—Å—Ç: {person.height} —Å–º\n'
            f'–î–ª–∏–Ω–Ω–∞ —Ä—É–∫: {person.len_arm} —Å–º'
            )
    elif person.gender == "male":
        photo = FSInputFile(r"photo\—Ä–∞–∑–º–µ—Ä—ã.jpg")
        await bot.send_photo(chat_id=ms.from_user.id, photo=photo, 
        caption=f'–ü–æ–ª: –ú—É–∂—Å–∫–æ–π\n'
            f'–û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏: {person.chest} —Å–º\n'
            f'–¢–∞–ª–∏—è: {person.waist} —Å–º\n'
            f'–ë—ë–¥—Ä–∞: {person.hips} —Å–º\n'
            f'–®–∏—Ä–∏–Ω–∞ –ø–ª–µ—á—å: {person.shoulder_width} —Å–º\n'
            f'–†–æ—Å—Ç: {person.height} —Å–º\n'
            f'–î–ª–∏–Ω–Ω–∞ —Ä—É–∫: {person.len_arm} —Å–º'
            )
    else:
        await ms.answer("–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Å–≤–æ–∏ —Ä–∞–∑–º–µ—Ä—ãüòî.\n–í–≤–µ–¥–∏—Ç–µ –∏—Ö –∏ –º—ã –ø—Ä–∏–º–µ—Ä–∏–º –æ–¥–µ–∂–¥—É!üòâ")
    db.close()

async def scriptIMG(ms, id):
    try:
        print(id)
        process = await asyncio.create_subprocess_exec(
            "python", 
            "D:/Proga/VirtualFit/IMAGDressing-main_final/inference_IMAGdressing.py", 
            "--cloth_path", 
            f"D:/Proga/VirtualFit/IMAGDressing-main_final/VirtuFit/bussines_photo/{id}.jpg"
        )
        print("–ó–∞–ø—É—Å–∫–∞—é!")
        await process.wait()
        print("–ó–∞–ø—É—Å–∫–∞—é2!")
    except:
        print("–û—à–∏–±–∫–∞")
        await ms.answer("–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!")



#–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ—Ç —Ç—É—Ç –±—É–¥–µ—Ç –≤—Å—ë –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Å –±–ª–µ–Ω–¥–µ—Ä–æ–º...
@dp.message(F.photo, StateFilter(default_state))
async def photo_processing(message: Message):
    if int(message.from_user.id) == 1040701695:
        file_id = message.photo[-1].file_id
        file = await bot.get_file(file_id)
        file_path = file.file_path
        await bot.download_file(file_path, f"bussines_photo/{message.from_user.id}.jpg")
        await message.answer("–ó–∞–ø—É—Å–∫... –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è 3 –º–∏–Ω—É—Ç—ã.")
        await scriptIMG(message, message.from_user.id)
        photo = FSInputFile(rf"output\{message.from_user.id}.jpg")
        await bot.send_photo(chat_id=message.from_user.id, photo=photo)
        os.remove(rf"output\{message.from_user.id}.jpg")
        os.remove(rf"bussines_photo\{message.from_user.id}.jpg")
    else:
        photo = FSInputFile(r"output_sd_base\main foto.JPG")
        await bot.send_photo(chat_id=message.from_user.id,photo=photo, caption="–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É(–∫–æ–º–ø —Å–ª–∞–±—ã–πüòì). –ù–æ –º—ã —É–∂–µ —É–º–µ–µ–º –¥–µ–ª–∞—Ç—å –≤–æ—Ç —Ç–∞–∫:")

#–í–û–¢ –¢–£–¢====================================================
BLENDER_EXECUTABLE = r'C:\Program Files\Blender Foundation\Blender 4.2\blender.exe'  # –ü—É—Ç—å –∫ Blender
#===========================================================
BLENDER_SCRIPT = 'blender2_script.py'  # –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É —Å–∫—Ä–∏–ø—Ç—É
RENDER_OUTPUT_DIR = 'renders'  # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤


async def run_blender_async(output_path: str, person) -> bool:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç Blender —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å–∫—Ä–∏–ø—Ç–æ–º"""
    command = [
        BLENDER_EXECUTABLE,
        '--background',
        '--python', BLENDER_SCRIPT,
        '--',  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –¥–ª—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞
        output_path, 
        str(person.gender),
        str((person.chest + 20) / 100),
        str((person.waist + 20) / 100),
        str((person.hips + 45) / 100),
        str((person.shoulder_width + 30) / 100)
    ]
    
    process = await asyncio.create_subprocess_exec(
        *command,
        stdout=asyncio.subprocess.PIPE,
        stderr=asyncio.subprocess.PIPE
    )
    
    await process.communicate()
    return process.returncode == 0


def is_file_available(filepath: str) -> bool:
    try:
        with open(filepath, 'rb'):
            return True
    except IOError:
        return False


@dp.message(F.text=="ü•º–ü—Ä–∏–º–µ—Ä–∏—Ç—å –æ–¥–µ–∂–¥—Éüîß", StateFilter(default_state))
async def answer(message:Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞"""

    db = get_db()
    person =  db.get(Person, message.from_user.id)
    if person.gender != "female":
        if person.height!=None:
            # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
            os.makedirs(RENDER_OUTPUT_DIR, exist_ok=True)
            filename = f"{message.from_user.id}.mp4"
            output_dir = r'D:\Proga\VirtualFit\IMAGDressing-main_final\VirtuFit\video' #========–í–û–¢ –¢–£–¢==============
            output_path = os.path.join(output_dir, filename)
            
            await message.reply("üöÄ –ù–∞—á–∏–Ω–∞—é —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥...")
            
            try:
                success = await run_blender_async(output_path, person)
                if not success:
                    video = FSInputFile(r"sos\video.mp4")
                    await bot.send_video(chat_id=message.from_user.id,video=video)
                

                for _ in range(10):
                    if os.path.exists(output_path) and is_file_available(output_path):
                        break
                    await asyncio.sleep(1)
                else:
                    video = FSInputFile(r"sos\video.mp4")
                    await bot.send_video(chat_id=message.from_user.id,video=video)
                

                if os.path.exists(output_path):
                    video = FSInputFile(output_path)
                    await bot.send_video(
                        chat_id=message.chat.id, 
                        video=video
                                        )
                    os.remove(output_path)
                else:
                    video = FSInputFile(r"sos\video.mp4")
                    await bot.send_video(chat_id=message.from_user.id,video=video)
                    
            except Exception as e:
                video = FSInputFile(r"sos\video.mp4")
                await bot.send_video(chat_id=message.from_user.id,video=video)
                if os.path.exists(output_path):
                    os.remove(output_path)
        else:
            await message.answer("–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Å–≤–æ–∏ —Ä–∞–∑–º–µ—Ä—ãüòî.\n–í–≤–µ–¥–∏—Ç–µ –∏—Ö –∏ –º—ã –ø—Ä–∏–º–µ—Ä–∏–º –æ–¥–µ–∂–¥—É!üòâ")
    else:
        video = FSInputFile(r"video\woman.mp4")
        await bot.send_video(chat_id=message.from_user.id,video=video)

# @dp.message(F.text == "üí∞–ü–æ–¥–ø–∏—Å–∫–∞üí∞", StateFilter(default_state))
# async def pay(message: Message):
#     await message.answer("–í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º!", reply_markup=kb_builder_payments.as_markup(resize_keyboard=True, one_time_keyboard=True))

# @dp.message(F.text == "üôÇ–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—åüôÇ", StateFilter(default_state))
# async def b2c(message: Message):
#     await message.answer("–¢—É—Ç —á—Ç–æ –Ω–∏–±—É–¥—å –ø–æ—è–≤–∏—Ç—Å—è! –°–∫–æ—Ä–æ...")

# @dp.message(F.text == "üíº–ë–∏–∑–Ω–µ—Åüíº", StateFilter(default_state))
# async def b2b(message: Message):
#     await message.answer("–¢—É—Ç —á—Ç–æ –Ω–∏–±—É–¥—å –ø–æ—è–≤–∏—Ç—Å—è! –°–∫–æ—Ä–æ...")


@dp.message(F.text == "‚ìò–ß—Ç–æ —É–º–µ–µ—à—å?‚ìò", StateFilter(default_state))
async def info(ms:Message):
    photo = FSInputFile(r"photo\–ø–∞–º—è—Ç–∫–∞.png")
    await bot.send_photo(ms.from_user.id, photo=photo, 
                     caption="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç VirtualFit.\n\n"
                     "–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüôÇ:\n\n"
                     "1. –í–≤–µ–¥–∏ —Å–≤–æ–∏ —Ä–∞–∑–º–µ—Ä—ãüìè\n"
                     "2. –ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É <–ü—Ä–∏–º–µ—Ä–∏—Ç—å –æ–¥–µ–∂–¥—É> –∏ –±—É–¥–µ—Ç –º–∞–≥–∏—è!!üîÆü™Ñ\n\n"
                     "–î–ª—è –±–∏–∑–Ω–µ—Å–∞üíº:\n"
                     "1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <–ë–∏–∑–Ω–µ—Å> –≤ –º–µ–Ω—é!üÜô")


# @dp.message(F.text == "–§—É—Ç–±–æ–ª–∫–∞", StateFilter(default_state))
# async def t_short(message: Message):
#     db = get_db()
#     person =  db.get(Person, message.from_user.id)
#     if person.photo:
#         '''–¢—É—Ç –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —Å–∫—Ä–∏–ø—Ç–∞ –±–ª–µ–Ω–¥–µ—Ä–∞ –∏ –≤—Å–µ–π —Å—É—Ç—ã –Ω–∞—à–µ–π'''
#         person.photo = False
#         db.commit()

#         db.close()

#         await message.answer("–ö–æ–≥–¥–∞ –Ω–∏–±—É–¥—å —è –Ω–∞—É—á—É—Å—å –¥–µ–ª–∞—Ç—å 3–¥ –≤–∏–¥–µ–æ:(((")
#     else:
#         await message.answer("–í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ñ–æ—Ç–æ")

@dp.message(F.text == "üíº–ë–∏–∑–Ω–µ—Åüíº", StateFilter(default_state))
async def t_bussines(message: Message):
    await message.answer("–°–∫–∏–Ω—å —Ñ–æ—Ç–æ –æ–¥–µ–∂–¥—ã –∏ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞")

@dp.message()
async def other_message(message:Message):
    await message.answer("–Ø —Ç–∞–∫–æ–µ –Ω–µ —É–º–µ—é((")



if __name__=='__main__':
    dp.run_polling(bot)


